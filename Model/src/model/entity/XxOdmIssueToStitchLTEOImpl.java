package model.entity;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 23 15:53:36 BDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxOdmIssueToStitchLTEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getLineId();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        SystemId {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getSystemId();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        TotProductionQty {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getTotProductionQty();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setTotProductionQty((Number)value);
            }
        }
        ,
        StitchSendQty {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getStitchSendQty();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setStitchSendQty((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreationBy {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getCreationBy();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setCreationBy((Number)value);
            }
        }
        ,
        UpdateDate {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getUpdateDate();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setUpdateDate((Date)value);
            }
        }
        ,
        UpdateBy {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getUpdateBy();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setUpdateBy((Number)value);
            }
        }
        ,
        WashType {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getWashType();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setWashType((String)value);
            }
        }
        ,
        ProductionType {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getProductionType();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setProductionType((String)value);
            }
        }
        ,
        XxOdmIssueToStitchHTEO {
            public Object get(XxOdmIssueToStitchLTEOImpl obj) {
                return obj.getXxOdmIssueToStitchHTEO();
            }

            public void put(XxOdmIssueToStitchLTEOImpl obj, Object value) {
                obj.setXxOdmIssueToStitchHTEO((XxOdmIssueToStitchHTEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(XxOdmIssueToStitchLTEOImpl object);

        public abstract void put(XxOdmIssueToStitchLTEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int TOTPRODUCTIONQTY = AttributesEnum.TotProductionQty.index();
    public static final int STITCHSENDQTY = AttributesEnum.StitchSendQty.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATIONBY = AttributesEnum.CreationBy.index();
    public static final int UPDATEDATE = AttributesEnum.UpdateDate.index();
    public static final int UPDATEBY = AttributesEnum.UpdateBy.index();
    public static final int WASHTYPE = AttributesEnum.WashType.index();
    public static final int PRODUCTIONTYPE = AttributesEnum.ProductionType.index();
    public static final int XXODMISSUETOSTITCHHTEO = AttributesEnum.XxOdmIssueToStitchHTEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxOdmIssueToStitchLTEOImpl() {
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for SystemId, using the alias name SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number)getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SystemId.
     * @param value value to set the SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * Gets the attribute value for TotProductionQty, using the alias name TotProductionQty.
     * @return the TotProductionQty
     */
    public Number getTotProductionQty() {
        return (Number)getAttributeInternal(TOTPRODUCTIONQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotProductionQty.
     * @param value value to set the TotProductionQty
     */
    public void setTotProductionQty(Number value) {
        setAttributeInternal(TOTPRODUCTIONQTY, value);
    }

    /**
     * Gets the attribute value for StitchSendQty, using the alias name StitchSendQty.
     * @return the StitchSendQty
     */
    public Number getStitchSendQty() {
        return (Number)getAttributeInternal(STITCHSENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for StitchSendQty.
     * @param value value to set the StitchSendQty
     */
    public void setStitchSendQty(Number value) {
        setAttributeInternal(STITCHSENDQTY, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreationBy, using the alias name CreationBy.
     * @return the CreationBy
     */
    public Number getCreationBy() {
        return (Number)getAttributeInternal(CREATIONBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationBy.
     * @param value value to set the CreationBy
     */
    public void setCreationBy(Number value) {
        setAttributeInternal(CREATIONBY, value);
    }

    /**
     * Gets the attribute value for UpdateDate, using the alias name UpdateDate.
     * @return the UpdateDate
     */
    public Date getUpdateDate() {
        return (Date)getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdateDate.
     * @param value value to set the UpdateDate
     */
    public void setUpdateDate(Date value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * Gets the attribute value for UpdateBy, using the alias name UpdateBy.
     * @return the UpdateBy
     */
    public Number getUpdateBy() {
        return (Number)getAttributeInternal(UPDATEBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdateBy.
     * @param value value to set the UpdateBy
     */
    public void setUpdateBy(Number value) {
        setAttributeInternal(UPDATEBY, value);
    }

    /**
     * Gets the attribute value for WashType, using the alias name WashType.
     * @return the WashType
     */
    public String getWashType() {
        return (String)getAttributeInternal(WASHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashType.
     * @param value value to set the WashType
     */
    public void setWashType(String value) {
        setAttributeInternal(WASHTYPE, value);
    }

    /**
     * Gets the attribute value for ProductionType, using the alias name ProductionType.
     * @return the ProductionType
     */
    public String getProductionType() {
        return (String)getAttributeInternal(PRODUCTIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductionType.
     * @param value value to set the ProductionType
     */
    public void setProductionType(String value) {
        setAttributeInternal(PRODUCTIONTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity XxOdmIssueToStitchHTEOImpl.
     */
    public XxOdmIssueToStitchHTEOImpl getXxOdmIssueToStitchHTEO() {
        return (XxOdmIssueToStitchHTEOImpl)getAttributeInternal(XXODMISSUETOSTITCHHTEO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxOdmIssueToStitchHTEOImpl.
     */
    public void setXxOdmIssueToStitchHTEO(XxOdmIssueToStitchHTEOImpl value) {
        setAttributeInternal(XXODMISSUETOSTITCHHTEO, value);
    }

    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.XxOdmIssueToStitchLTEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("XX_ODM_ISSUE_TO_STITCH_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineId(sVal);
        
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
//    public void lock() {
//        super.lock();
//    }

       /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
     protected void doDML(int operation, TransactionEvent e) {

    
    Map sessionScope    = ADFContext.getCurrent().getSessionScope();
    String user         = (String)sessionScope.get("userId");
    String orgId        = (String)sessionScope.get("orgId");
    String unitName     = (String)sessionScope.get("unitName");


        if(DML_UPDATE == operation){
                  try {
                      
                     setUpdateDate((Date)Date.getCurrentDate()); 
                      setUpdateBy(new oracle.jbo.domain.Number(user));
                  } catch (SQLException f) {
                      System.out.println(f.getMessage());
                  }
              }
              else if (DML_INSERT == operation){
               
                  try {
                      
                      //setHeaderNo(getSrNoString());
                      //setOrgId(new oracle.jbo.domain.Number(orgId));
                      //setAttribute1(unitName);
                      setCreationDate((Date)Date.getCurrentDate());  
                     setCreationBy(new oracle.jbo.domain.Number(user));
                     
                     
                     
                  } catch (SQLException f) {
                      ;
                  }
              } 

    super.doDML(operation, e);
    }
}
